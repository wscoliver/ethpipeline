/*
  @name spec/swap.js
*/
import pipeline from '../../index'
import { expect , assert } from 'chai'
import path from 'path'
import Web3 from 'web3'
import dotenv from 'dotenv'
dotenv.config({ path: '../../../.env' })
let web3 = new Web3()
let provider = new web3.providers.HttpProvider(process.env.DEV_RPC)
web3.setProvider(provider)

describe('#Core Tests', function () {
  describe('#swapContract Solo', function () {
    let mockContract = {}
    before(function(done) {
      let contractPath = path.join(__dirname, '../../../contracts/swap3.sol')
      pipeline.mockContract({ name: 'DredgrSwapSolo', path: contractPath}).then(function(contract) {
        mockContract = contract
        done()
      })
    })
    it('should create a swap', function(done) {
      mockContract.swapCreated().watch(function(err, result) {
        console.log('swapCreated !')
        console.log(result)
	done()
      })
    })
  })
})
